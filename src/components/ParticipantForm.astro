---
import { z } from 'zod';

const participantSchema = z.object({
  name: z.string().min(2),
  email: z.string().email()
});

let error = '';
let success = false;

if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    const name = data.get('name');
    const email = data.get('email');
    
    const result = participantSchema.safeParse({ name, email });
    
    if (result.success) {
      // Store participant in session/database
      success = true;
    } else {
      error = 'Please provide valid name and email';
    }
  } catch (e) {
    error = 'Something went wrong';
  }
}
---

<form method="POST" class="space-y-4">
  <div>
    <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
    <input
      type="text"
      name="name"
      id="name"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500"
    />
  </div>
  
  <div>
    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
    <input
      type="email"
      name="email"
      id="email"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500"
    />
  </div>

  {error && <p class="text-red-500">{error}</p>}
  {success && <p class="text-green-500">Successfully added participant!</p>}
  
  <button
    type="submit"
    class="inline-flex justify-center rounded-md border border-transparent bg-purple-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2"
  >
    Add Participant
  </button>
</form>